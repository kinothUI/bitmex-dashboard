import BaseEntity from "entities/BaseEntity";

export default class InstrumentFull extends BaseEntity {
  public rootSymbol: string;
  public state: string;
  public typ: string;
  public listing: string;
  public front: string;
  public expiry: string;
  public settle: string;
  public relistInterval: string;
  public inverseLeg: string;
  public sellLeg: string;
  public buyLeg: string;
  public optionStrikePcnt: number;
  public optionStrikeRound: number;
  public optionStrikePrice: number;
  public optionMultiplier: number;
  public positionCurrency: string;
  public underlying: string;
  public quoteCurrency: string;
  public underlyingSymbol: string;
  public reference: string;
  public referenceSymbol: string;
  public calcInterval: string;
  public publishInterval: string;
  public publishTime: string;
  public maxOrderQty: number;
  public maxPrice: number;
  public lotSize: number;
  public tickSize: number;
  public multiplier: number;
  public settlCurrency: string;
  public underlyingToPositionMultiplier: number;
  public underlyingToSettleMultiplier: number;
  public quoteToSettleMultiplier: number;
  public isQuanto: boolean;
  public isInverse: boolean;
  public initMargin: number;
  public maintMargin: number;
  public riskLimit: number;
  public riskStep: number;
  public limit: number;
  public capped: boolean;
  public taxed: boolean;
  public deleverage: boolean;
  public makerFee: number;
  public takerFee: number;
  public settlementFee: number;
  public insuranceFee: number;
  public fundingBaseSymbol: string;
  public fundingQuoteSymbol: string;
  public fundingPremiumSymbol: string;
  public fundingTimestamp: string;
  public fundingInterval: string;
  public fundingRate: number;
  public indicativeFundingRate: number;
  public rebalanceTimestamp: string;
  public rebalanceInterval: string;
  public openingTimestamp: string;
  public closingTimestamp: string;
  public sessionInterval: string;
  public prevClosePrice: number;
  public limitDownPrice: number;
  public limitUpPrice: number;
  public bankruptLimitDownPrice: number;
  public bankruptLimitUpPrice: number;
  public prevTotalVolume: number;
  public totalVolume: number;
  public volume: number;
  public volume24h: number;
  public prevTotalTurnover: number;
  public totalTurnover: number;
  public turnover: number;
  public turnover24h: number;
  public homeNotional24h: number;
  public foreignNotional24h: number;
  public prevPrice24h: number;
  public vwap: number;
  public highPrice: number;
  public lowPrice: number;
  public lastPrice: number;
  public lastPriceProtected: number;
  public lastTickDirection: string;
  public lastChangePcnt: number;
  public bidPrice: number;
  public midPrice: number;
  public askPrice: number;
  public impactBidPrice: number;
  public impactMidPrice: number;
  public impactAskPrice: number;
  public hasLiquidity: boolean;
  public openInterest: number;
  public openValue: number;
  public fairMethod: string;
  public fairBasisRate: number;
  public fairBasis: number;
  public fairPrice: number;
  public markMethod: string;
  public markPrice: number;
  public indicativeTaxRate: number;
  public indicativeSettlePrice: number;
  public optionUnderlyingPrice: number;
  public settledPrice: number;

  constructor(json: any) {
    super(json);

    this.rootSymbol = json.rootSymbol;
    this.state = json.state;
    this.typ = json.typ;
    this.listing = json.listing;
    this.front = json.front;
    this.expiry = json.expiry;
    this.settle = json.settle;
    this.relistInterval = json.relistInterval;
    this.inverseLeg = json.inverseLeg;
    this.sellLeg = json.sellLeg;
    this.buyLeg = json.buyLeg;
    this.optionStrikePcnt = json.optionStrikePcnt;
    this.optionStrikeRound = json.optionStrikeRound;
    this.optionStrikePrice = json.optionStrikePrice;
    this.optionMultiplier = json.optionMultiplier;
    this.positionCurrency = json.positionCurrency;
    this.underlying = json.underlying;
    this.quoteCurrency = json.quoteCurrency;
    this.underlyingSymbol = json.underlyingSymbol;
    this.reference = json.reference;
    this.referenceSymbol = json.referenceSymbol;
    this.calcInterval = json.calcInterval;
    this.publishInterval = json.publishInterval;
    this.publishTime = json.publishTime;
    this.maxOrderQty = json.maxOrderQty;
    this.maxPrice = json.maxPrice;
    this.lotSize = json.lotSize;
    this.tickSize = json.tickSize;
    this.multiplier = json.multiplier;
    this.settlCurrency = json.settlCurrency;
    this.underlyingToPositionMultiplier = json.underlyingToPositionMultiplier;
    this.underlyingToSettleMultiplier = json.underlyingToSettleMultiplier;
    this.quoteToSettleMultiplier = json.quoteToSettleMultiplier;
    this.isQuanto = json.isQuanto;
    this.isInverse = json.isInverse;
    this.initMargin = json.initMargin;
    this.maintMargin = json.maintMargin;
    this.riskLimit = json.riskLimit;
    this.riskStep = json.riskStep;
    this.limit = json.limit;
    this.capped = json.capped;
    this.taxed = json.taxed;
    this.deleverage = json.deleverage;
    this.makerFee = json.makerFee;
    this.takerFee = json.takerFee;
    this.settlementFee = json.settlementFee;
    this.insuranceFee = json.insuranceFee;
    this.fundingBaseSymbol = json.fundingBaseSymbol;
    this.fundingQuoteSymbol = json.fundingQuoteSymbol;
    this.fundingPremiumSymbol = json.fundingPremiumSymbol;
    this.fundingTimestamp = json.fundingTimestamp;
    this.fundingInterval = json.fundingInterval;
    this.fundingRate = json.fundingRate;
    this.indicativeFundingRate = json.indicativeFundingRate;
    this.rebalanceTimestamp = json.rebalanceTimestamp;
    this.rebalanceInterval = json.rebalanceInterval;
    this.openingTimestamp = json.openingTimestamp;
    this.closingTimestamp = json.closingTimestamp;
    this.sessionInterval = json.sessionInterval;
    this.prevClosePrice = json.prevClosePrice;
    this.limitDownPrice = json.limitDownPrice;
    this.limitUpPrice = json.limitUpPrice;
    this.bankruptLimitDownPrice = json.bankruptLimitDownPrice;
    this.bankruptLimitUpPrice = json.bankruptLimitUpPrice;
    this.prevTotalVolume = json.prevTotalVolume;
    this.totalVolume = json.totalVolume;
    this.volume = json.volume;
    this.volume24h = json.volume24h;
    this.prevTotalTurnover = json.prevTotalTurnover;
    this.totalTurnover = json.totalTurnover;
    this.turnover = json.turnover;
    this.turnover24h = json.turnover24h;
    this.homeNotional24h = json.homeNotional24h;
    this.foreignNotional24h = json.foreignNotional24h;
    this.prevPrice24h = json.prevPrice24h;
    this.vwap = json.vwap;
    this.highPrice = json.highPrice;
    this.lowPrice = json.lowPrice;
    this.lastPrice = json.lastPrice;
    this.lastPriceProtected = json.lastPriceProtected;
    this.lastTickDirection = json.lastTickDirection;
    this.lastChangePcnt = json.lastChangePcnt;
    this.bidPrice = json.bidPrice;
    this.midPrice = json.midPrice;
    this.askPrice = json.askPrice;
    this.impactBidPrice = json.impactBidPrice;
    this.impactMidPrice = json.impactMidPrice;
    this.impactAskPrice = json.impactAskPrice;
    this.hasLiquidity = json.hasLiquidity;
    this.openInterest = json.openInterest;
    this.openValue = json.openValue;
    this.fairMethod = json.fairMethod;
    this.fairBasisRate = json.fairBasisRate;
    this.fairBasis = json.fairBasis;
    this.fairPrice = json.fairPrice;
    this.markMethod = json.markMethod;
    this.markPrice = json.markPrice;
    this.indicativeTaxRate = json.indicativeTaxRate;
    this.indicativeSettlePrice = json.indicativeSettlePrice;
    this.optionUnderlyingPrice = json.optionUnderlyingPrice;
    this.settledPrice = json.settledPrice;
  }
}
