import BaseEntity from "entities/BaseEntity";

export default class PositionFull extends BaseEntity {
  public symbol: string;
  public currency: string;
  public underlying: string;
  public commission: number;
  public initMarginReq: string;
  public riskLimit: number;
  public leverage: number;
  public crossMargin: boolean;
  public deleveragePercentile: number;
  public rebalancedPnl: number;
  public prevRealisedPnl: number;
  public prevUnrealisedPnl: number;
  public prevClosePrice: number;
  public openingTimestamp: string;
  public openingQty: number;
  public openingCost: number;
  public openingComm: number;
  public openOrderBuyQty: number;
  public openOrderBuyCost: number;
  public openOrderBuyPremium: number;
  public openOrderSellQty: number;
  public openOrderSellCost: number;
  public openOrderSellPremium: number;
  public execBuyQty: number;
  public execBuyCost: number;
  public execSellQty: number;
  public execSellCost: number;
  public execQty: number;
  public execCost: number;
  public execComm: number;
  public currentTimestamp: string;
  public currentQty: number;
  public currentCost: number;
  public currentComm: number;
  public realisedCost: number;
  public unrealisedCost: number;
  public grossOpenCost: number;
  public grossOpenPremium: number;
  public grossExecCost: number;
  public isOpen: boolean;
  public markPrice: number;
  public markValue: number;
  public riskValue: number;
  public homeNotional: number;
  public foreignnotional: number;
  public posState: string;
  public posCost: number;
  public posCost2: number;
  public posLoss: number;
  public posMargin: number;
  public posMaint: number;
  public posAllowance: number;
  public taxableMargin: number;
  public initMargin: number;
  public maintMargin: number;
  public sessionMargin: number;
  public targetExcessMargin: number;
  public varMargin: number;
  public realisedGrossPnl: number;
  public realisedTax: number;
  public realisedPnl: number;
  public unrealisedGrossPnl: number;
  public unrealisedPnl: number;
  public unrealisedPnlPcnt: number;
  public unrealisedRoePcnt: number;
  public simpleQty: any; // 'null' auf testnet
  public simpleCost: any; // 'null' auf testnet
  public simpleValue: any; // 'null' auf testnet
  public simplePnl: any; // 'null' auf testnet
  public simplePnlPcnt: any; // 'null' auf testnet
  public avgCostPrice: number;
  public avgEntryPrice: number;
  public breakEvenPrice: number;
  public marginCallPrice: number;
  public liquidationPrice: number;
  public bankruptPrice: number;
  public lastPrice: number;
  public lastValue: number;

  constructor(json: any) {
    super(json);

    this.symbol = json.symbol;
    this.currency = json.currency;
    this.underlying = json.underlying;
    this.commission = json.commission;
    this.initMarginReq = json.initMarginReq;
    this.riskLimit = json.riskLimit;
    this.leverage = json.leverage;
    this.crossMargin = json.crossMargin;
    this.deleveragePercentile = json.deleveragePercentile;
    this.rebalancedPnl = json.rebalancedPnl;
    this.prevRealisedPnl = json.prevRealisedPnl;
    this.prevUnrealisedPnl = json.prevUnrealisedPnl;
    this.prevClosePrice = json.prevClosePrice;
    this.openingTimestamp = json.openingTimestamp;
    this.openingQty = json.openingQty;
    this.openingCost = json.openingCost;
    this.openingComm = json.openingComm;
    this.openOrderBuyQty = json.openOrderBuyQty;
    this.openOrderBuyCost = json.openOrderBuyCost;
    this.openOrderBuyPremium = json.openOrderBuyPremium;
    this.openOrderSellQty = json.openOrderSellQty;
    this.openOrderSellCost = json.openOrderSellCost;
    this.openOrderSellPremium = json.openOrderSellPremium;
    this.execBuyQty = json.execBuyQty;
    this.execBuyCost = json.execBuyCost;
    this.execSellQty = json.execSellQty;
    this.execSellCost = json.execSellCost;
    this.execQty = json.execQty;
    this.execCost = json.execCost;
    this.execComm = json.execComm;
    this.currentTimestamp = json.currentTimestamp;
    this.currentQty = json.currentQty;
    this.currentCost = json.currentCost;
    this.currentComm = json.currentComm;
    this.realisedCost = json.realisedCost;
    this.unrealisedCost = json.unrealisedCost;
    this.grossOpenCost = json.grossOpenCost;
    this.grossOpenPremium = json.grossOpenPremium;
    this.grossExecCost = json.grossExecCost;
    this.isOpen = json.isOpen;
    this.markPrice = json.markPrice;
    this.markValue = json.markValue;
    this.riskValue = json.riskValue;
    this.homeNotional = json.homeNotional;
    this.foreignnotional = json.foreignnotional;
    this.posState = json.posState;
    this.posCost = json.posCost;
    this.posCost2 = json.posCost2;
    this.posLoss = json.posLoss;
    this.posMargin = json.posMargin;
    this.posMaint = json.posMaint;
    this.posAllowance = json.posAllowance;
    this.taxableMargin = json.taxableMargin;
    this.initMargin = json.initMargin;
    this.maintMargin = json.maintMargin;
    this.sessionMargin = json.sessionMargin;
    this.targetExcessMargin = json.targetExcessMargin;
    this.varMargin = json.varMargin;
    this.realisedGrossPnl = json.realisedGrossPnl;
    this.realisedTax = json.realisedTax;
    this.realisedPnl = json.realisedPnl;
    this.unrealisedGrossPnl = json.unrealisedGrossPnl;
    this.unrealisedPnl = json.unrealisedPnl;
    this.unrealisedPnlPcnt = json.unrealisedPnlPcnt;
    this.unrealisedRoePcnt = json.unrealisedRoePcnt;
    this.simpleQty = json.simpleQty;
    this.simpleCost = json.simpleCost;
    this.simpleValue = json.simpleValue;
    this.simplePnl = json.simplePnl;
    this.simplePnlPcnt = json.simplePnlPcnt;
    this.avgCostPrice = json.avgCostPrice;
    this.avgEntryPrice = json.avgEntryPrice;
    this.breakEvenPrice = json.breakEvenPrice;
    this.marginCallPrice = json.marginCallPrice;
    this.liquidationPrice = json.liquidationPrice;
    this.bankruptPrice = json.bankruptPrice;
    this.lastPrice = json.lastPrice;
    this.lastValue = json.lastValue;
  }

  public getValueInBitcoin() {
    return this.unrealisedPnl / 100000000;
  }
}
